#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define f first
#define s second
#define pb push_back
#define pii pair<ll,ll>
ll const N=1e5+1;
ll const INF=1e17;
vector<pii> g[N];
ll dist[N];
void dijkstra(ll start) {
     priority_queue <pii,vector<pii>,greater<pii>> pq;
     fill(dist,dist+N,INF);
     dist[start]=0;
     pq.push({0,start});
     while (!pq.empty()) {
          ll d=pq.top().f;
          ll v=pq.top().s;
          pq.pop();
          if (d>dist[v]) continue;
          for (auto [w,to]:g[v]) {
               if (dist[v]+w<dist[to]) {
                    dist[to]=dist[v]+w;
                    pq.push({dist[to],to});
               }
          }
     }
}
signed main() {
     ios::sync_with_stdio(0);
     cin.tie(0);
     ll n,m;
     cin >> n >> m;
     for (int i=1; i<=m; i++) {
          ll u,v,w;
          cin >> u >> v >> w;
          g[u].pb({w,v});
          g[v].pb({w,u});
     }
     dijkstra(1);
     for (int i=1; i<=n; i++) {
          if (dist[i]==INF) cout << "-1 ";
          else cout << dist[i] << ' ';
     }
}
