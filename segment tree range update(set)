#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
ll const N=1e6+10;
ll a[N],st[4*N],z[4*N],n,m,marks[4*N];
void build (ll v, ll tl, ll tr) {
     if (tl==tr) {
          st[v]=a[tl];
          return;
     }
     else {
          ll mid=(tl+tr)>>1;
          build (v*2,tl,mid);
          build (v*2+1,mid+1,tr);
          st[v]=st[v*2]+st[v*2+1];
     }
}
void push (ll v, ll tl, ll tr) {
     if (z[v]) {
          ll mid=(tl+tr)>>1;
          z[v*2]=z[v];
          z[v*2+1]=z[v];
          st[v*2]=z[v]*(mid-tl+1);
          st[v*2+1]=z[v]*(tr-mid);
          marks[v*2]=1;
          marks[v*2+1]=1;
          marks[v]=0;
     }
}
void update (ll v, ll tl, ll tr, ll l, ll r, ll x) {
     if (tl>r || l>tr) return;
     if (l<=tl && tr<=r) {
          st[v]=x*(tr-tl+1);
          z[v]=x;
          marks[v]=1;
     }
     else {
          push(v,tl,tr);
          ll mid=(tl+tr)>>1;
          update (v*2,tl,mid,l,r,x);
          update (v*2+1,mid+1,tr,l,r,x);
          st[v]=st[v*2]+st[v*2+1];
     }
}
ll get (ll v, ll tl, ll tr, ll l, ll r) {
     if (tl>r || l>tr) return 0;
     if (l<=tl && tr<=r) return st[v];
     push(v,tl,tr);
     ll mid=(tl+tr)>>1;
     return get(v*2,tl,mid,l,r)+get(v*2+1,mid+1,tr,l,r);
}
signed main() {
     ios::sync_with_stdio(0);
     cin.tie(0);
     cin >> n >> m;
     for (int i=1; i<=n; i++) cin >> a[i];
     build (1,1,n);
     while (m--) {
          ll p,l,r,x;
          cin >> p >> l;
          if (p==1) {
               cin >> r >> x;
               update (1,1,n,l,r,x);
          }
          else cout << get(1,1,n,l,l) << '\n';
     }
}
